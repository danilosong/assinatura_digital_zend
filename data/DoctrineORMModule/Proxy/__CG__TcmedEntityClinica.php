<?php

namespace DoctrineORMModule\Proxy\__CG__\Tcmed\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Clinica extends \Tcmed\Entity\Clinica implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'idClinica', 'refClinica', 'refClinicaConsulta', 'razaoSocial', 'fantasiaClinica', 'cnpj', 'status', 'tipo', 'pathLogo', 'codCnes', 'inscricaoEstadual', 'dadosAtendimento', 'createdBy', 'createdAt', 'updatedAt', 'updatedBy', 'endereco', 'contato', 'matriz', 'valores', 'nivel');
        }

        return array('__isInitialized__', 'idClinica', 'refClinica', 'refClinicaConsulta', 'razaoSocial', 'fantasiaClinica', 'cnpj', 'status', 'tipo', 'pathLogo', 'codCnes', 'inscricaoEstadual', 'dadosAtendimento', 'createdBy', 'createdAt', 'updatedAt', 'updatedBy', 'endereco', 'contato', 'matriz', 'valores', 'nivel');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Clinica $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function toArray($limite = 6, $prefix = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($limite, $prefix));

        return parent::toArray($limite, $prefix);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdClinica()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdClinica();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdClinica', array());

        return parent::getIdClinica();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefClinica($refClinica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefClinica', array($refClinica));

        return parent::setRefClinica($refClinica);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefClinica()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefClinica', array());

        return parent::getRefClinica();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefClinicaConsulta($refClinicaConsulta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefClinicaConsulta', array($refClinicaConsulta));

        return parent::setRefClinicaConsulta($refClinicaConsulta);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefClinicaConsulta($formated = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefClinicaConsulta', array($formated));

        return parent::getRefClinicaConsulta($formated);
    }

    /**
     * {@inheritDoc}
     */
    public function getRazaoSocial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRazaoSocial', array());

        return parent::getRazaoSocial();
    }

    /**
     * {@inheritDoc}
     */
    public function getFantasiaClinica()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFantasiaClinica', array());

        return parent::getFantasiaClinica();
    }

    /**
     * {@inheritDoc}
     */
    public function getCnpj($mask = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCnpj', array($mask));

        return parent::getCnpj($mask);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getTipo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipo', array());

        return parent::getTipo();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt($obj = false, $full = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array($obj, $full));

        return parent::getCreatedAt($obj, $full);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt($obj = false, $full = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array($obj, $full));

        return parent::getUpdatedAt($obj, $full);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', array());

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndereco($get = '', array $params = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndereco', array($get, $params));

        return parent::getEndereco($get, $params);
    }

    /**
     * {@inheritDoc}
     */
    public function setDadosAtendimento($dadosAtendimento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDadosAtendimento', array($dadosAtendimento));

        return parent::setDadosAtendimento($dadosAtendimento);
    }

    /**
     * {@inheritDoc}
     */
    public function getDadosAtendimento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDadosAtendimento', array());

        return parent::getDadosAtendimento();
    }

    /**
     * {@inheritDoc}
     */
    public function getPathLogo($cleaned = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPathLogo', array($cleaned));

        return parent::getPathLogo($cleaned);
    }

    /**
     * {@inheritDoc}
     */
    public function getInscricaoEstadual()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInscricaoEstadual', array());

        return parent::getInscricaoEstadual();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdClinica($idClinica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdClinica', array($idClinica));

        return parent::setIdClinica($idClinica);
    }

    /**
     * {@inheritDoc}
     */
    public function setRazaoSocial($razaoSocial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRazaoSocial', array($razaoSocial));

        return parent::setRazaoSocial($razaoSocial);
    }

    /**
     * {@inheritDoc}
     */
    public function setFantasiaClinica($fantasiaClinica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFantasiaClinica', array($fantasiaClinica));

        return parent::setFantasiaClinica($fantasiaClinica);
    }

    /**
     * {@inheritDoc}
     */
    public function setCnpj($cnpj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCnpj', array($cnpj));

        return parent::setCnpj($cnpj);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setTipo($tipo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipo', array($tipo));

        return parent::setTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array());

        return parent::setCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array());

        return parent::setUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', array($updatedBy));

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function setEndereco(\Tcmed\Entity\Endereco $endereco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndereco', array($endereco));

        return parent::setEndereco($endereco);
    }

    /**
     * {@inheritDoc}
     */
    public function setPathLogo($pathLogo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPathLogo', array($pathLogo));

        return parent::setPathLogo($pathLogo);
    }

    /**
     * {@inheritDoc}
     */
    public function setInscricaoEstadual($inscricaoEstadual)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInscricaoEstadual', array($inscricaoEstadual));

        return parent::setInscricaoEstadual($inscricaoEstadual);
    }

    /**
     * {@inheritDoc}
     */
    public function listContatos($opt = NULL, $first = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'listContatos', array($opt, $first));

        return parent::listContatos($opt, $first);
    }

    /**
     * {@inheritDoc}
     */
    public function addContato($contato = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContato', array($contato));

        return parent::addContato($contato);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContato($contato)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContato', array($contato));

        return parent::removeContato($contato);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function beforeUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'beforeUpdate', array());

        return parent::beforeUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getMatriz()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatriz', array());

        return parent::getMatriz();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatriz(\Tcmed\Entity\Clinica $matriz = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatriz', array($matriz));

        return parent::setMatriz($matriz);
    }

    /**
     * {@inheritDoc}
     */
    public function isMatriz()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMatriz', array());

        return parent::isMatriz();
    }

    /**
     * {@inheritDoc}
     */
    public function listaContatos($filters = array (
), $orderBy = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'listaContatos', array($filters, $orderBy));

        return parent::listaContatos($filters, $orderBy);
    }

    /**
     * {@inheritDoc}
     */
    public function contatoPrincipal($get = '', array $params = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'contatoPrincipal', array($get, $params));

        return parent::contatoPrincipal($get, $params);
    }

    /**
     * {@inheritDoc}
     */
    public function setCodCnes($codCnes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodCnes', array($codCnes));

        return parent::setCodCnes($codCnes);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodCnes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodCnes', array());

        return parent::getCodCnes();
    }

    /**
     * {@inheritDoc}
     */
    public function setValores($valores = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValores', array($valores));

        return parent::setValores($valores);
    }

    /**
     * {@inheritDoc}
     */
    public function getValores()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValores', array());

        return parent::getValores();
    }

    /**
     * {@inheritDoc}
     */
    public function toArrayNew($limite = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArrayNew', array($limite));

        return parent::toArrayNew($limite);
    }

    /**
     * {@inheritDoc}
     */
    public function toArrayPrefixing($prefix = '', $limite = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArrayPrefixing', array($prefix, $limite));

        return parent::toArrayPrefixing($prefix, $limite);
    }

    /**
     * {@inheritDoc}
     */
    public function extractObjects(&$dataRet, &$obj, $prefix = '', $recursive = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extractObjects', array($dataRet, $obj, $prefix, $recursive));

        return parent::extractObjects($dataRet, $obj, $prefix, $recursive);
    }

    /**
     * {@inheritDoc}
     */
    public function extractObjectsFullArray(&$dataRet, &$obj, $recursive = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extractObjectsFullArray', array($dataRet, $obj, $recursive));

        return parent::extractObjectsFullArray($dataRet, $obj, $recursive);
    }

    /**
     * {@inheritDoc}
     */
    public function floatToStr($float, $dec = 2, $format = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'floatToStr', array($float, $dec, $format));

        return parent::floatToStr($float, $dec, $format);
    }

    /**
     * {@inheritDoc}
     */
    public function strToFloat($check)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'strToFloat', array($check));

        return parent::strToFloat($check);
    }

    /**
     * {@inheritDoc}
     */
    public function strToDate($strDateTime = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'strToDate', array($strDateTime));

        return parent::strToDate($strDateTime);
    }

    /**
     * {@inheritDoc}
     */
    public function dateToStr($date, $full = false, $obj = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'dateToStr', array($date, $full, $obj));

        return parent::dateToStr($date, $full, $obj);
    }

    /**
     * {@inheritDoc}
     */
    public function strToArray($str)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'strToArray', array($str));

        return parent::strToArray($str);
    }

    /**
     * {@inheritDoc}
     */
    public function objectToArray($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'objectToArray', array($data));

        return parent::objectToArray($data);
    }

    /**
     * {@inheritDoc}
     */
    public function arrayToStr($array)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'arrayToStr', array($array));

        return parent::arrayToStr($array);
    }

    /**
     * {@inheritDoc}
     */
    public function mask($mask, $str)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mask', array($mask, $str));

        return parent::mask($mask, $str);
    }

    /**
     * {@inheritDoc}
     */
    public function clean($str, $opt = true, $length = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clean', array($str, $opt, $length));

        return parent::clean($str, $opt, $length);
    }

    /**
     * {@inheritDoc}
     */
    public function relationGet($object = NULL, $get = '', $params = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'relationGet', array($object, $get, $params));

        return parent::relationGet($object, $get, $params);
    }

    /**
     * {@inheritDoc}
     */
    public function timeToInt($strTime = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'timeToInt', array($strTime));

        return parent::timeToInt($strTime);
    }

    /**
     * {@inheritDoc}
     */
    public function intToTime($intTime = 0, $convert = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'intToTime', array($intTime, $convert));

        return parent::intToTime($intTime, $convert);
    }

    /**
     * {@inheritDoc}
     */
    public function strToInt($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'strToInt', array($value));

        return parent::strToInt($value);
    }

    /**
     * {@inheritDoc}
     */
    public function intToStr($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'intToStr', array($value));

        return parent::intToStr($value);
    }

    /**
     * {@inheritDoc}
     */
    public function listArrayCollection($arrayCollection, $opt = array (
  'status' => 'ATIVO',
), $first = false, $cond = 'andWhere', $orders = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'listArrayCollection', array($arrayCollection, $opt, $first, $cond, $orders));

        return parent::listArrayCollection($arrayCollection, $opt, $first, $cond, $orders);
    }

}
